services:
  react-app:
    build:
      context: ./react-app
      dockerfile: Dockerfile.dev
    ports:
      - "3000:3000"  
    volumes:
      - ./react-app:/usr/src/app  # 로컬 코드와 동기화
      - /usr/src/app/node_modules
    environment:
      - REACT_APP_VALID_NAME_LIST=${REACT_APP_VALID_NAME_LIST} 
      - REACT_APP_LOGIN_CLIENT_ID=${REACT_APP_LOGIN_CLIENT_ID} 
      - CHOKIDAR_USEPOLLING=true
      - WDS_SOCKET_HTTPS=true  # ws 대신 wss 통신 사용
      - WDS_SOCKET_PORT=443    # https 통신 포트
      - WDS_SOCKET_PATH=/ws/   # websocket 통신 경로 (-> react-app:3000 으로 접속)               
      - REACT_APP_STAGE=dev
      - REACT_APP_API_URL=/api      
      - REACT_APP_LOGIN_REDIRECT_URL=https://127.0.0.1/callback            
    command: ["npm", "start"]  # 개발용 React 서버 실행

  api:
    build:
      context: ./api
    ports:
      - "8000:8000"
    volumes:
      - ./api:/usr/src/app
    environment:
      - PYTHONUNBUFFERED=1
      - NAVER_CLIENT_ID=${NAVER_CLIENT_ID}
      - NAVER_CLIENT_SECRET=${NAVER_CLIENT_SECRET}      
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_REGION_NAME=${AWS_REGION_NAME}
      - VALID_NAME_LIST=${VALID_NAME_LIST}
      - API_STAGE=dev
      - S3_BUCKET_NAME=coolman-storage            
      - NAVER_REDIRECT_URI=https://127.0.0.1/callback
      - S3_ENDPOINT_URL=https://kr.object.ncloudstorage.com      

  db:
    image: postgres:15
    volumes:
      - pg_data:/var/lib/postgresql/data
      - ./db/init.dev.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
  
  nginx:
    image: nginx:alpine
    ports:
      - "443:443"    
    volumes:
      - ./nginx/nginx.dev.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/certs:/etc/nginx/certs
    depends_on:
      - react-app
      - api

volumes:
  pg_data:
